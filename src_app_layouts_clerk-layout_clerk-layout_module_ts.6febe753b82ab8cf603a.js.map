{"version":3,"mappings":"iTAEAA,aAOE,cAEA,+EAJWC,8BAAkBC,yECP/BC,0CDOaF,GAAkBG,2LAL/B,6CEGAC,aAKE,WAAoBC,EAA0BC,GAA1BC,YAA0BA,cAErCA,aAAU,qCAEnB,oCAAQF,EAAYC,GAClB,OAAOC,KAAKC,KAAKC,KAAcF,KAAKG,QAAUJ,EAAO,IAAID,EAAG,KAG9DL,8BAASK,GACP,OAAOE,KAAKC,KAAKC,KAAcF,KAAKG,QAAU,WAAWL,EAAG,KAE9DL,sCACE,OAAOO,KAAKC,KAAKG,IAAeJ,KAAKG,QAAU,yDAdtCV,GAAYE,oDAAZF,EAAYY,QAAZZ,EAAY,qBAFX,WADd,kDC2BoCE,cACEA,cAAIA,SAAgBA,QACtBA,gCADMA,8DAblBA,iBACEA,kBACEA,kBACEA,kBAEEA,iBACEA,kBACEA,mBAAiDA,yBAAyBA,QAAQA,eAClFA,oBAAiDA,2BAAwBA,QACzEA,eACAA,iBAAuBA,uBACvBA,QACAA,wBAGFA,QACAA,mBACEA,oBAAsFA,UAAwCA,QAC9HA,mBACEA,sBAA0BA,8FAAoB,EAAMW,KAAwDX,qBAAQA,QACpHA,sBAA0BA,8FAAqB,EAAOW,KAAoDX,sBAASA,QAEnHA,QACJA,QACFA,QAEFA,QACFA,QACFA,QAEFA,kCAvB6DA,uCACAA,sCAIzBA,sCAK8DA,+CAEzBA,oCACEA,+DAlCnFA,iBACEA,iBACEA,iBACEA,iBACEA,gBAAuBA,SAAkDA,QACzEA,gBACEA,gBAAsCA,iBAAKA,QAC7CA,QACFA,QACAA,kBAEEA,cACEA,sBAA8JA,gCAAmBA,QACnLA,QACAA,0BAiCFA,QAEFA,QACFA,QACAA,mBACEA,mBACIA,mBACIA,kBAAoCA,0BAAaA,QACjDA,iBAAuBA,UAAmCA,QAC1DA,iBACIA,UACJA,QACJA,QACJA,QACJA,QACAA,gCA1D+BA,kEAUWA,wCAyCPA,gDAEnBA,8CCzDhC,ICFaY,EAA4B,CACvC,CAAEC,KAAM,kBAAmBC,UDC7B,WAQE,WAAoBX,EAAoCC,GAApCC,oBAAoCA,UAFxDA,iBAAyB,GAIzB,uCACEA,KAAKU,kBAGPjB,2BAAMK,EAAWC,EAAoBY,GAArC,WACMC,EAASb,EAAY,UAAY,WACjCc,EAAQd,EAAY,WAAa,YAErCe,SAAU,CACRC,MAAO,6BACLhB,EAAY,WAAa,aAAW,QAC9BY,EAAKK,UAAS,IAAIL,EAAKM,QAAO,IACtCC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,kBAClBC,KAAK,SAACjB,GACHA,EAAOkB,aACTC,EAAKC,aAAaC,QAAQ7B,EAAK8B,OAAQhB,GAAQiB,UAC7C,SAACC,GACChB,SAAU,QAASD,EAAQ,iBAAkB,WAC7CY,EAAKM,YAAc,GACnBN,EAAKf,kBAEP,SAACoB,GAAK,MAMdrC,iDACEO,KAAK0B,aAAaM,iBAAiBH,UAAU,SAAC9B,GAC5CkC,QAAQC,IAAInC,GACZD,EAAKiC,YAAchC,2CAvCZN,GAAmBE,+CAAnBF,EAAmBC,qiCDXhCC,iBACEA,iBACIA,iBACIA,iBAEIA,iBACEA,wBAiENA,QAEJA,QACJA,QACFA,QA3EAA,eAMkDA,yQCAlD,ICAE,CAAEa,KAAM,YAAaC,UAAWjB,eCKlC2C,wEAUa1C,4DATF,CACP2C,KACAC,IACAC,IACAC,cAAsBhC,GACtBiC,WANJ","names":["h","o","selectors","t","styles","T","n","e","this","http","post","BaseURI","get","factory","d","O","path","component","getBookedUsers","a","c","s","m","title","FirstName","Surname","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","isConfirmed","r","clerkService","checkIn","bookId","subscribe","l","roomsBooked","getUsersBooked","console","log","B","u","g","v","Z","x"],"sources":["./src/app/layouts/guest-layout/dashboard/dashboard.component.ts","./src/app/layouts/guest-layout/dashboard/dashboard.component.html","./src/app/services/clerk.service.ts","./src/app/layouts/clerk-layout/pages/processCIO/processCIO.component.html","./src/app/layouts/clerk-layout/pages/processCIO/processCIO.component.ts","./src/app/layouts/clerk-layout/clerk-layout.routing.ts","./src/app/layouts/clerk-layout/clerk-layout.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<app-dashboard></app-dashboard>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClerkService {\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  readonly BaseURI = 'https://localhost:44318/api/clerk/';\r\n\r\n  checkIn(id: number, action): Observable<unknown> {\r\n    return this.http.post<unknown>(this.BaseURI + action+'/'+id,{});\r\n  }\r\n\r\n  checkOut(id: number): Observable<unknown> {\r\n    return this.http.post<unknown>(this.BaseURI + 'checkin/'+id,{});\r\n  }\r\n  getUsersBooked(): Observable<unknown[]> {\r\n    return this.http.get<unknown[]>(this.BaseURI + 'GetUsersBooked');\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n          <div class=\"col-md-12\">\r\n\r\n              <div class=\"jumbotron\">\r\n                <div class=\"row\" *ngFor=\"let user of roomsBooked\">\r\n                  <div class=\"col-md-8\">\r\n                    <div class=\"card\" >\r\n                      <div class=\"card-header card-header-primary\">\r\n                        <h4 class=\"card-title\">Number of Rooms Booked {{user.BookedRooms.length}}</h4>\r\n                        <p class=\"card-category\">\r\n                          <i class=\"material-icons text-danger\">house</i>\r\n                        </p>\r\n                      </div>\r\n                      <div class=\"card-body\">\r\n\r\n                        <p>\r\n                          <button class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\".multi-collapse\" aria-expanded=\"false\" aria-controls=\"multiCollapseE\">View Customer Rooms</button>\r\n                        </p>\r\n                        <div class=\"row\" *ngFor=\"let room of user.BookedRooms \">\r\n                          <div class=\"col\">\r\n                            <div class=\"collapse multi-collapse\" id=\"multiCollapseE\">\r\n                              <div class=\"card card-body\">\r\n\r\n                                <div class=\"row\">\r\n                                  <div class=\"col\">\r\n                                    <span class=\"badge rounded-pill text-bg-warning\">{{room.startDate | date}}</span> -\r\n                                    <span class=\"badge rounded-pill text-bg-warning\">{{room.endDate | date }}</span>\r\n                                    <hr>\r\n                                    <h5 class=\"card-title\">Amenities\r\n                                    </h5>\r\n                                    <ul *ngFor=\"let amenity of room.amenities \">\r\n                                      <li>{{amenity.Name}}</li>\r\n                                    </ul>\r\n                                  </div>\r\n                                  <div class=\"col align-middle\">\r\n                                    <span class=\"badge badge-pill badge-info\" style=\"font-size: 16px; font-weight: bold;\">{{room.status ? 'checked in': 'booked'}}</span>\r\n                                    <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n                                      <button mat-raised-button (click)=\"Check(room,true, user)\" [disabled]=\"room.status\" class=\"btn btn-warning\">Check In</button>\r\n                                      <button mat-raised-button (click)=\"Check(room, false, user)\" [disabled]=\"!room.status\" class=\"btn orange\">Check Out</button>\r\n\r\n                                      </div>\r\n                                  </div>\r\n                                </div>\r\n\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"card card-profile\">\r\n                        <div class=\"card-body\">\r\n                            <h6 class=\"card-category text-gray\">Customer info</h6>\r\n                            <h4 class=\"card-title\">{{user.FirstName}} {{user.Surname}}</h4>\r\n                            <p class=\"card-description\">\r\n                                Username: {{user.Username}}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n\r\n\r\n          </div>\r\n\r\n      </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { AuthService } from \"app/auth/auth.service\";\r\nimport { ClerkService } from \"app/services/clerk.service\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n  selector: \"app-processCIO\",\r\n  templateUrl: \"./processCIO.component.html\",\r\n  styleUrls: [\"./processCIO.component.scss\"],\r\n})\r\nexport class ProcessCIOComponent implements OnInit {\r\n  roomsBooked: unknown[] = [];\r\n\r\n  constructor(private clerkService: ClerkService, private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.getBookedUsers();\r\n  }\r\n\r\n  Check(room: any, isCheckin: boolean, user) {\r\n    let action = isCheckin ? \"checkin\" : \"checkOut\";\r\n    let label = isCheckin ? \"check in\" : \"check out\";\r\n\r\n    Swal.fire({\r\n      title: `Are you sure you want to ${\r\n        isCheckin ? \"check in\" : \"check out\"\r\n      } the ${user.FirstName} ${user.Surname}?`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#ff0000\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, book it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.clerkService.checkIn(room.bookId, action).subscribe(\r\n          (result) => {\r\n            Swal.fire(\"Chec!\", label + \" successfully \", \"success\");\r\n            this.roomsBooked = [];\r\n            this.getBookedUsers();\r\n          },\r\n          (error) => {}\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  getBookedUsers() {\r\n    this.clerkService.getUsersBooked().subscribe((roomsUsers: any) => {\r\n      console.log(roomsUsers);\r\n      this.roomsBooked = roomsUsers;\r\n    });\r\n  }\r\n}\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from '../guest-layout/dashboard/dashboard.component';\r\nimport { ProcessCIOComponent } from './pages/processCIO/processCIO.component';\r\n\r\nexport const ClerkLayoutRoutes: Routes = [\r\n  { path: \"checkIn-process\", component: ProcessCIOComponent },\r\n  { path: \"dashboard\", component: DashboardComponent },\r\n\r\n];\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ClerkLayoutComponent } from './clerk-layout.component';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ProcessCIOComponent } from './pages/processCIO/processCIO.component';\r\nimport { ClerkLayoutRoutes } from './clerk-layout.routing';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    MatInputModule,\r\n    RouterModule.forChild(ClerkLayoutRoutes),\r\n    MatCardModule\r\n  ],\r\n  declarations: [ClerkLayoutComponent, ProcessCIOComponent,DashboardComponent]\r\n})\r\nexport class ClerkLayoutModule { }\r\n"],"sourceRoot":"webpack:///","file":"src_app_layouts_clerk-layout_clerk-layout_module_ts.6febe753b82ab8cf603a.js"}