{"version":3,"mappings":"6PAEAA,2BAME,sCAAUC,EAAYC,GAClB,OAAID,EACAC,GAEJA,EAAOA,EAAKC,cAELF,EAAMG,OAAO,SAASC,GACzB,OAAOC,KAAKC,UAAUF,GAAMF,cAAcK,SAASN,MALvCD,EADC,4CAHVQ,6CAAgBC,YAJ7B,wNCiBYR,yBACEA,SACFA,gCAF+CA,oBAC7CA,gCCfd,iBAUE,WACSS,EACCC,EACAC,EACyBC,EACzBC,GAJDC,cACCA,UACAA,iBACyBA,YACzBA,mBAPVA,eAAkB,GAClBA,iBAAsB,EAShB,4BAAN,q7CACQ,OACNA,KAAKC,WADCN,EAAOK,KAAKE,KAAKC,KAExB,GAAMH,KAAKI,wBAAX,gBACCC,QAAQC,IAAIN,KAAKE,MACjBF,KAAKO,WAAaP,KAAKQ,GAAGC,MAAM,CAC9BC,WAAY,CAAC,GAAIzB,eACjB0B,SAAU,CAAC,GAAI1B,eACf2B,OAAQ,CAAC,GAAI3B,iBAIP,GAARU,GAAeK,KAAKa,aAAab,KAAKE,KAAKY,gBAG7CC,2CACEV,QAAQC,IAAIN,KAAKO,WAAWS,OAEzBhB,KAAKO,WAAWS,QACjBX,QAAQY,MAAMjB,KAAKO,WAAWS,OACT,GAArBhB,KAAQE,KAAKC,KACXH,KAAKkB,YAAYC,WAAWnB,KAAKO,WAAWa,MAAOpB,KAAKE,KAAKmB,OAAOC,UAAUC,UAAU,YACtF5B,EAAK6B,UAGPxB,KAAKkB,YAAYO,QAAQzB,KAAKO,WAAWa,OAAOG,UAAU,YACxDlB,QAAQY,MAAMrB,GACdD,EAAK6B,SAEP,YACEnB,QAAQY,MAAMrB,OAQtBmB,gDACEf,KAAKkB,YAAYd,gBAAgBmB,UAAU,YACvClB,QAAQC,IAAIV,GACZD,EAAK+B,UAAY9B,KAMvBmB,kCAAapB,GACXK,KAAKO,WAAWoB,WAAW,CACzBhB,SAAUhB,EAAKgB,SACfD,WAAYf,EAAKe,WACjBE,OAAQjB,EAAKiB,UAIjBG,6BACEf,KAAK4B,OAAOC,kDArEHd,GAAmB7B,0CASpB4C,MAAe5C,qCATd6B,EAAmBgB,goBDVhC7C,gBAAqCA,SAA6CA,QAClFA,kBAAuEA,iCAAUW,eACjFX,iBACAA,iBAEQA,4BACIA,qBAAWA,uBAAWA,QACtBA,mBACJA,QAEAA,4BACIA,sBAAWA,sBAASA,QACpBA,oBAEJA,QACAA,6BACEA,sBAAWA,6BAAgBA,QAC3BA,yBACEA,uBAAYA,eAAEA,QACdA,+BAGFA,QACFA,QAERA,QACAA,kBACIA,sBAAyCA,oBAAOA,QAChDA,sBAA0BA,gCAASW,YAAsBX,mBAAMA,QACnEA,QAEAA,eA/BqCA,+DACVA,yCAkBkBA,sTCd7C,uECD8BA,8BAWEA,yEADFA,cACEA,gCAMFA,sDALSA,6CAG5B,kEAQmBA,cAA8CA,SAAgBA,gCAAhBA,6CAA9CA,gDAAuBA,oEAGvBA,cAAuCA,SAAeA,gCAAfA,+CAAvCA,gDAAoBA,wCCtBlD,iBAUE,aADOc,WAAa,GAGpB,+EAPWe,8BAAcgB,khBDZH7C,mBAAkEA,qDAAlEA,QACDA,mBACKA,mBACEA,gCAOFA,QACAA,iBAEEA,wCAQJA,QACFA,QAGIA,0CAGAA,+DA5B8DA,yBAIzDA,gDAG7B,6CAM+CA,gSCNnD,yBCSkBA,cAAIA,uBAAWA,QACfA,cAAIA,qBAASA,QACbA,cAAIA,gBAAIA,QACRA,qDAGAA,cAAIA,SAAqBA,QACzBA,cAAIA,SAAkBA,QACtBA,cAAIA,SAAkBA,QACtBA,cACEA,qBAAkCA,oFAA8BA,oBAAWA,8BAAkBA,QAAWA,QACtGA,sBAAkCA,+EAAyBA,qBAAWA,iBAAIA,QAAWA,QACzFA,kCANIA,6BACAA,2BACAA,4BCnBtB,iBAOE,WAAoBS,EAAgCC,GAAhCI,mBAAgCA,cADtDA,WAAe,GAEb,uCACEA,KAAKgC,YAGPjB,2CACEf,KAAKkB,YAAYc,WAAWT,UAAU,YAClClB,QAAQC,IAAIV,GACZD,EAAKsC,MAAQrC,KAKnBmB,0CACQnB,EAAS,IAAIkC,KACnBlC,EAAOsC,cAAe,EACtBtC,EAAOuC,MAAQ,QACfvC,EAAOwC,OAAS,OAChBxC,EAAOM,KAAO,CAAEmC,IAAK,MAAOlC,MAAM,GACVH,KAAK4B,OAAOU,KAClCC,EACA3C,GAEc4C,cAAcjB,UAAU,YACtC5B,EAAKqC,cAGTjB,8BAASpB,GAAT,WACQE,EAAS,IAAIiC,KACnBjC,EAAOqC,cAAe,EACtBrC,EAAOsC,MAAQ,QACftC,EAAOuC,OAAS,OAChBvC,EAAOK,KAAO,CAAEmC,IAAK,MAAOlC,MAAM,EAAMW,KAAM,CAACH,SAAUhB,EAAO8C,SAAU/B,WAAYf,EAAO+C,WAAY9B,OAAQ,IACzFZ,KAAK4B,OAAOU,KAClCC,EACA1C,GAEc2C,cAAcjB,UAAU,YACtC3B,EAAKoC,cAITjB,gCAAWpB,GAAX,WACEF,SAAU,CACRkD,MAAO,gBACPC,KAAM,oCACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBC,KAAK,SAACrD,GACHA,EAAOsD,aAETvD,EAAKsB,YAAYkC,WAAWzD,GAAI4B,UAAU,SAACzB,GACzCL,SACE,WACA,8BACA,YAGF,YAAK,4CA/DFsB,GAAa7B,iDAAb6B,EAAagB,ycDX1B7C,eACEA,iBACEA,iBACEA,iBACEA,iBACEA,iBACEA,iBACEA,gBAAwBA,uBAAWA,QACnCA,eAA0BA,4CAA8BA,QACxDA,qBAAsEA,gCAASW,cACxEX,qBAAUA,gBAAGA,QAChBA,QACNA,QACAA,kBAEEA,yBACEA,4CAMAA,6CASFA,QACFA,QACFA,QACFA,QACFA,QACFA,QACFA,QACFA,eAvByBA,8OCTzB","names":["Z","m","t","toLowerCase","filter","g","JSON","stringify","includes","p","pure","n","e","a","l","i","this","isEditable","data","edit","getRoomsTypes","console","log","formCentre","fb","group","roomNumber","roomName","typeId","populateForm","room","o","valid","error","roomService","updateRoom","value","centre","CentreId","subscribe","Close","AddRoom","roomsType","patchValue","dialog","closeAll","d","selectors","getRooms","rooms","disableClose","width","height","add","open","C","afterClosed","RoomName","RoomNumber","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","isConfirmed","deleteRoom"],"sources":["./src/app/layouts/admin-layout/pipe.ts","./src/app/layouts/owner-layout/dialogs/RoomDialog/RoomDialog.component.html","./src/app/layouts/owner-layout/dialogs/RoomDialog/RoomDialog.component.ts","./src/app/shared/ui/table/table.component.html","./src/app/shared/ui/table/table.component.ts","./src/app/layouts/owner-layout/pages/room/room.component.html","./src/app/layouts/owner-layout/pages/room/room.component.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\n\r\nexport class SearchFilterPipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n      if(!value)return null;\r\n      if(!args)return value;\r\n\r\n      args = args.toLowerCase();\r\n\r\n      return value.filter(function(data){\r\n          return JSON.stringify(data).toLowerCase().includes(args);\r\n      });\r\n  }\r\n\r\n}","<h3 mat-dialog-title align=\"center\"> {{isEditable ? 'Editable' : 'Add New Room'}} </h3>\r\n<form class=\"example-form\" [formGroup]=\"formCentre\" autocomplete=\"off\" (submit)=\"onSubmit()\">\r\n<div mat-dialog-content></div>\r\n<div mat-dialog-content>\r\n\r\n        <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n            <mat-label>Room Number</mat-label>\r\n            <input matInput placeholder=\"ex. Midrand c\"  formControlName=\"roomNumber\" >\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n            <mat-label>Room Name</mat-label>\r\n            <input matInput placeholder=\"\" formControlName=\"roomName\" >\r\n\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Choose Room Type</mat-label>\r\n          <mat-select formControlName=\"typeId\" required>\r\n            <mat-option>--</mat-option>\r\n            <mat-option *ngFor=\"let roomType of roomsType\" [value]=\"roomType.Id\">\r\n              {{roomType.name}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n    <button mat-stroked-button type=\"submit\">Confirm</button>\r\n    <button mat-raised-button (click)=\"Close()\" color=\"warn\">Cancel</button>\r\n</div>\r\n\r\n</form>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { RoomService } from '../../../../services/room.service';\r\n\r\n@Component({\r\n  selector: 'app-RoomDialog',\r\n  templateUrl: './RoomDialog.component.html',\r\n  styleUrls: ['./RoomDialog.component.scss']\r\n})\r\nexport class RoomDialogComponent implements OnInit {\r\n\r\n  formCentre: FormGroup;\r\n  roomsType: any[] =[]\r\n  isEditable: boolean = false\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private fb: FormBuilder,\r\n    private dialogRef: MatDialogRef<RoomDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) private data,\r\n    private roomService: RoomService\r\n  ) {}\r\n\r\n  async ngOnInit() {\r\n    const edit = this.data.edit;\r\n    this.isEditable = edit;\r\n   await this.getRoomsTypes()\r\n    console.log(this.data);\r\n    this.formCentre = this.fb.group({\r\n      roomNumber: [\"\", Validators.required],\r\n      roomName: [\"\", Validators.required],\r\n      typeId: [\"\", Validators.required],\r\n\r\n    });\r\n\r\n    edit == true ? this.populateForm(this.data.room) : \"\";\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(this.formCentre.valid)\r\n\r\n    if(this.formCentre.valid) {\r\n      console.error(this.formCentre.valid);\r\n      if(this.data.edit == true) {\r\n        this.roomService.updateRoom(this.formCentre.value, this.data.centre.CentreId).subscribe(data => {\r\n          this.Close();\r\n        })\r\n      } else {\r\n        this.roomService.AddRoom(this.formCentre.value).subscribe(data => {\r\n          console.error(data);\r\n          this.Close();\r\n        },\r\n        err => {\r\n          console.error(err);\r\n\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  getRoomsTypes() {\r\n    this.roomService.getRoomsTypes().subscribe(res => {\r\n        console.log(res);\r\n        this.roomsType = res;\r\n    })\r\n  }\r\n\r\n\r\n\r\n  populateForm(data) {\r\n    this.formCentre.patchValue({\r\n      roomName: data.roomName,\r\n      roomNumber: data.roomNumber,\r\n      typeId: data.typeId,\r\n\r\n    });\r\n  }\r\n  Close() {\r\n    this.dialog.closeAll();\r\n  }\r\n}\r\n","\r\n                        <input type=\"text\" class=\"form-control mb-4\" placeholder=\"Search\" [(ngModel)]=\"query\" id=\"listSearch\">\r\n                       <table class=\"table\">\r\n                            <thead class=\" text-primary\">\r\n                              <ng-container\r\n                                *ngTemplateOutlet=\"\r\n                                  headers || defaultHeaderTemplate;\r\n                                  context: { $implicit: data }\r\n                                \"\r\n                              ></ng-container>\r\n\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                              <tr *ngFor=\"let row  of data | filter: query\" >\r\n                                <ng-container\r\n                                      *ngTemplateOutlet=\"\r\n                                        rows || defaultRowTemplate;\r\n                                        context: { $implicit: row }\r\n                                      \"\r\n                              ></ng-container>\r\n                              </tr>\r\n                          </tbody>\r\n                        </table>\r\n\r\n                            <!-- If no template is provided use keys as headers and display all values -->\r\n                            <ng-template #defaultHeaderTemplate let-data>\r\n                              <th *ngFor=\"let header of data[0] | keyvalue\">{{ header.key }}</th>\r\n                            </ng-template>\r\n                            <ng-template #defaultRowTemplate let-row>\r\n                              <td *ngFor=\"let row of row | keyvalue\">{{ row.value }}</td>\r\n                            </ng-template>\r\n\r\n","import {\r\n  Component,\r\n  ContentChild,\r\n  Input,\r\n  OnInit,\r\n  TemplateRef,\r\n} from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-table\",\r\n  templateUrl: \"./table.component.html\",\r\n  styleUrls: [\"./table.component.scss\"],\r\n})\r\nexport class TableComponent implements OnInit {\r\n  @Input() data!: any[];\r\n  @ContentChild(\"headers\") headers: TemplateRef<any> | undefined;\r\n  @ContentChild(\"rows\") rows: TemplateRef<any> | undefined;\r\n  public query: any = '';\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<div>\r\n  <div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header card-header-danger\">\r\n              <h4 class=\"card-title \">Hotel rooms</h4>\r\n              <p class=\"card-category\"> List of rooms within the hotel</p>\r\n              <button class=\"addbutton\" mat-icon-button style=\"font-size: xx-large\" (click)=\"addRoom()\">\r\n                     <mat-icon>add</mat-icon>\r\n                  </button>\r\n            </div>\r\n            <div class=\"card-body\">\r\n\r\n              <app-table [data]=\"rooms\" style=\"background-image: url('./assets/logo-only.png')\">\r\n                <ng-template #headers>\r\n                  <th>Room Number</th>\r\n                  <th>Room Name</th>\r\n                  <th>Type</th>\r\n                  <th></th>\r\n                </ng-template>\r\n                <ng-template #rows let-row >\r\n                  <td>{{ row.RoomNumber  }}</td>\r\n                  <td>{{ row.RoomName }}</td>\r\n                  <td>{{ row.RoomType }}</td>\r\n                  <td>\r\n                    <button mat-button color=\"danger\" (click)=\"removeRoom(row.id)\"> <mat-icon >restore_from_trash</mat-icon></button>\r\n                      <button mat-button color=\"danger\" (click)=\"editRoom(row)\"> <mat-icon >edit</mat-icon></button>\r\n                  </td>\r\n                </ng-template>\r\n              </app-table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport Swal from 'sweetalert2';\r\nimport { RoomDialogComponent } from '../../dialogs/RoomDialog/RoomDialog.component';\r\nimport { RoomService } from '../../../../services/room.service';\r\n\r\n@Component({\r\n  selector: 'app-room',\r\n  templateUrl: './room.component.html',\r\n  styleUrls: ['./room.component.scss']\r\n})\r\nexport class RoomComponent implements OnInit {\r\nrooms: any[] = [];\r\n  constructor(private roomService: RoomService,public dialog: MatDialog,) { }\r\n  ngOnInit() {\r\n    this.getRooms();\r\n  }\r\n\r\n  getRooms() {\r\n    this.roomService.getRooms().subscribe(res => {\r\n        console.log(res);\r\n        this.rooms = res;\r\n    })\r\n  }\r\n\r\n\r\n  addRoom() {\r\n    const dialog = new MatDialogConfig;\r\n    dialog.disableClose = false;\r\n    dialog.width = '20rem';\r\n    dialog.height = 'auto';\r\n    dialog.data = { add: 'yes', edit: false}\r\n    const dialogReference = this.dialog.open(\r\n      RoomDialogComponent,\r\n      dialog\r\n    );\r\n    dialogReference.afterClosed().subscribe(result => {\r\n      this.getRooms();\r\n    })\r\n  }\r\n  editRoom(course) {\r\n    const dialog = new MatDialogConfig;\r\n    dialog.disableClose = false;\r\n    dialog.width = '20rem';\r\n    dialog.height = 'auto';\r\n    dialog.data = { add: 'yes', edit: true, room: {roomName: course.RoomName, roomNumber: course.RoomNumber, typeId: 1} }\r\n    const dialogReference = this.dialog.open(\r\n      RoomDialogComponent,\r\n      dialog\r\n    );\r\n    dialogReference.afterClosed().subscribe(result => {\r\n      this.getRooms();\r\n    })\r\n  }\r\n\r\n  removeRoom(id) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#ff0000',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n\r\n        this.roomService.deleteRoom(id).subscribe((result) => {\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your file has been deleted.',\r\n            'success'\r\n          )\r\n\r\n        },error => {\r\n\r\n        })\r\n\r\n      }\r\n    })\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"default-src_app_layouts_owner-layout_pages_room_room_component_ts.4016317770de37e973a6.js"}