{"version":3,"mappings":"6TAKcA,EAA4B,CACxC,CACEC,KAAM,GACNC,SAAU,CACR,CACED,KAAM,eACNE,mBAAWC,KAKjB,CAAEH,KAAM,YAAaE,UAAWE,4BCNlCC,wEAWaC,4DAVF,CACPC,KACAC,IACAC,cAAsBV,SAJ1B,iYCLAU,aAME,WAAoBJ,EAA0BC,GAA1BI,YAA0BA,cAErCA,aAAU,qCAGnB,uCACE,OAAOA,KAAKC,KAAKC,IAAWF,KAAKG,UAGnCC,qCACE,OAAOJ,KAAKC,KAAKC,IAAWF,KAAKG,QAAU,kBAG7CC,gCAAWT,EAAMC,GACf,OAAOI,KAAKC,KAAKI,KAAKL,KAAKG,QAAUP,EAAID,IAG3CS,6BAAQT,GACN,OAAOK,KAAKC,KAAKI,KAAKL,KAAKG,QAASR,IAEtCS,gCAAWT,GACT,OAAOK,KAAKC,KAAKK,OAAON,KAAKG,QAAUR,IAGzCS,2CAAsBT,EAAQC,EAAOW,GACnC,IAAMC,EAAc,CAAEC,QAAS,IAAIZ,KAAY,CAAE,eAAgB,sBAC7Da,EAAOC,EAAHA,GACNC,OAAMjB,GAAKC,GAAK,CAAEiB,UAAWxB,EAAF,GAAMkB,KAEnC,eAAQO,IAAIJ,GACLV,KAAKC,KAAKI,KAAK,0DAA4DV,EAAQe,EAAMF,IAGlGJ,8BAAST,GACP,IAAMC,EAAc,CAAEa,QAAS,IAAIZ,KAAY,CAAE,eAAgB,sBACjE,OAAOG,KAAKC,KAAKI,KAAK,2CAA4CV,EAASC,IAG7EQ,mCAAcT,GACZ,IAAMC,EAAc,CAAEa,QAAS,IAAIZ,KAAY,CAAE,eAAgB,sBACjE,OAAOG,KAAKC,KAAKI,KAAK,oDAAqDV,EAASC,IAEtFQ,oCACE,OAAOJ,KAAKC,KAAKC,IAAW,qDAG9BE,gCAAWT,GACT,OAAOK,KAAKC,KAAKC,IAAS,kDAAmDP,0CAlDpES,GAAWN,oDAAXM,EAAWW,QAAXX,EAAW,qBAFV,WADd","names":["c","path","children","component","Y","h","t","n","a","p","l","this","http","get","BaseURI","o","post","delete","i","r","headers","d","s","typeId","amenities","log","factory"],"sources":["./src/app/layouts/owner-layout/owner-layout.routing.ts","./src/app/layouts/owner-layout/owner-layout.module.ts","./src/app/services/room.service.ts"],"sourcesContent":["import { Routes } from \"@angular/router\";\r\n\r\nimport { DashboardComponent } from \"../../dashboard/dashboard.component\";\r\nimport { RoomComponent } from \"./pages/room/room.component\";\r\n\r\nexport const  OwnerLayoutRoutes: Routes = [\r\n  {\r\n    path: \"\",\r\n    children: [\r\n      {\r\n        path: \"manage-rooms\",\r\n        component: RoomComponent,\r\n      },\r\n    ],\r\n  },\r\n\r\n  { path: \"dashboard\", component: DashboardComponent },\r\n\r\n\r\n];\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OwnerLayoutComponent } from './owner-layout.component';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { AdminLayoutRoutes } from '../admin-layout/admin-layout.routing';\r\nimport { OwnerLayoutRoutes } from './owner-layout.routing';\r\nimport { RouterModule } from '@angular/router';\r\nimport { RoomComponent } from './pages/room/room.component';\r\nimport { RoomDialogComponent } from './dialogs/RoomDialog/RoomDialog.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    RouterModule.forChild(OwnerLayoutRoutes),\r\n  ],\r\n  declarations: [\r\n    RoomComponent,\r\n    RoomDialogComponent\r\n  ]\r\n})\r\nexport class OwnerLayoutModule { }\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoomService {\r\n\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  readonly BaseURI = 'https://localhost:44318/api/rooms/';\r\n\r\n\r\n  getRooms(): Observable<any[]> {\r\n    return this.http.get<any[]>(this.BaseURI);\r\n  }\r\n\r\n  getRoomsTypes(): Observable<any[]> {\r\n    return this.http.get<any[]>(this.BaseURI + 'GetRoomsTypes');\r\n  }\r\n\r\n  updateRoom(Room, id: number): Observable<any> {\r\n    return this.http.post(this.BaseURI + id, Room);\r\n  }\r\n\r\n  AddRoom(Room): Observable<any> {\r\n    return this.http.post(this.BaseURI, Room);\r\n  }\r\n  deleteRoom(id) {\r\n    return this.http.delete(this.BaseURI + id);\r\n  }\r\n\r\n  checkRoomAvailability(typeId, range, Amenities): Observable<any> {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n    let data = {\r\n      typeId, ...range, amenities: [...Amenities]\r\n    }\r\n    console.log(data);\r\n    return this.http.post('https://localhost:44318/api/booking/check-availability/' + typeId, data, httpOptions);\r\n  }\r\n\r\n  bookRoom(booking) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n    return this.http.post('https://localhost:44318/api/booking/book', booking, httpOptions)\r\n  }\r\n\r\n  cancelBooking(booking) {\r\n    const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json' }) };\r\n    return this.http.post('https://localhost:44318/api/booking/cancelbooking', booking, httpOptions)\r\n  }\r\n  getAmenities(): Observable<any[]> {\r\n    return this.http.get<any[]>('https://localhost:44318/api/booking/GetAmenities');\r\n  }\r\n\r\n  getProfile(id: number):  Observable<any[]> {\r\n    return this.http.get<any>('https://localhost:44318/api/booking/GetProfile/'+ id);\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":"webpack:///","file":"src_app_layouts_owner-layout_owner-layout_module_ts-src_app_services_room_service_ts.156ee34c06f90f570d52.js"}